{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "resourcePrefix": {
            "type": "string",
            "defaultValue": "be0",
            "metadata": {
                "description": "Prefix for all vm resources"
            }
        },
        "vnetName": {
            "type": "string",
            "defaultValue": "vnet01",
            "metadata": {
                "description": "VNet Name"
            }
        },
        "vnetAddressPrefix": {
            "type": "string",
            "defaultValue": "10.10.0.0/16",
            "metadata": {
                "description": "Address prefix"
            }
        },
        "subnet1Prefix": {
            "type": "string",
            "defaultValue": "10.10.1.0/24",
            "metadata": {
                "description": "Subnet 1 Prefix"
            }
        },
        "subnet1Name": {
            "type": "string",
            "defaultValue": "BackendSubnet",
            "metadata": {
                "description": "Subnet 1 Name"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources"
            }
        },
        "vmCount": {
            "type": "int",
            "defaultValue": 3
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Admin username"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Admin password"
            }
        }
    },
    "functions": [],
    "variables": {
        "uniqueStorageName": "[toLower(concat(parameters('resourcePrefix'),uniqueString(resourceGroup().id)))]"
    },
    "resources": [
        {
            "comments": "----------Network Security Group----------",
            "name": "[concat(parameters('subnet1Name'),'-nsg')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-11-01",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowRDP",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 200,
                            "direction": "Inbound"
                        }
                    }]
            }
        },
        {
            "comments": "----------Virtual Network----------",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-05-01",
            "name": "[parameters('vnetName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', concat(parameters('subnet1Name'),'-nsg'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('vnetAddressPrefix')]"
                    ]
                }
            },
            "resources": [
                {
                    "comments": "----------Subnets----------",
                    "type": "subnets",
                    "apiVersion": "2020-05-01",
                    "location": "[parameters('location')]",
                    "name": "[parameters('subnet1Name')]",
                    "dependsOn": [
                        "[parameters('vnetName')]",
                        "[concat(parameters('subnet1Name'),'-nsg')]"
                    ],
                    "properties": {
                        "addressPrefix": "[parameters('subnet1Prefix')]",
                        "networkSecurityGroup": {"id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat(parameters('subnet1Name'),'-nsg'))]"}
                    }
                }
            ]
        },
        {
            "comments": "----------Network Interfaces----------",
            "name": "[concat(parameters('resourcePrefix'), copyIndex(1),'-nic')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-05-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnet1Name'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipConfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',parameters('vnetName'),parameters('subnet1Name'))]"
                            }
                        }
                    }
                ]
            },
            "copy": {
                "name": "nicLoop",
                "count": "[parameters('vmCount')]"
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-11-01",
            "name": "TestVM-pip",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4
            }
        },
        {
            "comments": "----------TestVM Network Interface----------",
            "name": "TestVM-nic",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-05-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnet1Name'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipConfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'TestVM-pip')]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',parameters('vnetName'),parameters('subnet1Name'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "comments": "----------Storage Account----------",
            "name": "[variables('uniqueStorageName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "Storage"
        },
        {
            "comments": "----------Virtual Machines----------",
            "name": "[concat(parameters('resourcePrefix'), copyIndex(1),'-vm')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-07-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('uniqueStorageName'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('resourcePrefix'), copyIndex(1),'-nic'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_B2s"
                },
                "osProfile": {
                    "computerName": "[concat(parameters('resourcePrefix'), copyIndex(1),'-vm')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2016-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat(parameters('resourcePrefix'), copyIndex(1),'-disk')]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('resourcePrefix'), copyIndex(1),'-nic'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": false,
                        "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', variables('uniqueStorageName'))).primaryEndpoints.blob]"
                    }
                }
            },
            "resources": [
                {
                    "comments": "----------Install IIS----------",
                    "apiVersion": "2015-06-15",
                    "type": "extensions",
                    "name": "config-iis",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/', concat(parameters('resourcePrefix'), copyIndex(1),'-vm'))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Compute",
                        "type": "CustomScriptExtension",
                        "typeHandlerVersion": "1.4",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "fileUris": [
                                "https://raw.githubusercontent.com/mikerodrick/ARM-Templates/main/az104/scripts/install-iis.ps1"
                            ]
                        },
                        "protectedSettings": {
                            "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File install-iis.ps1')]"
                        }
                    }
                }
            ],
            "copy": {
                "name": "vmLoop",
                "count": "[parameters('vmCount')]"
            }
        },
        {
            "comments": "----------TestVM----------",
            "name": "TestVM",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-07-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('uniqueStorageName'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', 'TestVM-nic')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_B2s"
                },
                "osProfile": {
                    "computerName": "TestVM",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2016-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "TestVM-disk",
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', 'TestVM-nic')]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": false,
                        "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', variables('uniqueStorageName'))).primaryEndpoints.blob]"
                    }
                }
            }
        }
    ],
    "outputs": {}
}
